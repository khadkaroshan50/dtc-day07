name: Kubernetes deployment
on:
  push:
    branches:
      - main

env: 
  FRONTEND_IMAGE: roshankhadka50/3tier-frontend

  BACKEND_IMAGE: roshankhadka50/3tier-backend

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: checkout code
      uses: actions/checkout@v4

    - name: create .env for client
      run: |
        echo "REACT_APP_API_URL=${{ secrets.API_URL}}" > application/client/.env

    - name: set up Docker Build
      uses: docker/setup-buildx-action@v3

    - name: login to DockerHub
      uses: docker/login-action@v3 
      with: 
        registry: docker.io 
        username: ${{ secrets.DOCKER_USER}}
        password: ${{ secrets.DOCKER_PASSWORD}}

    - name: Build and push Docker Image
      uses: docker/build-push-action@v5
      with:
        context: ./application/client
        push: true
        tags: ${{ env.FRONTEND_IMAGE }}:latest


    - name: Build and push Docker Image
      uses: docker/build-push-action@v5
      with:
        context: ./application/server
        push: true
        tags: ${{ env.BACKEND_IMAGE }}:latest

    - name: Insert Dependencies [SSH]
      run: |
        sudo apt-get update
        sudo apt-get install -y openssh-client

    - name: ADD SSH KEY
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_KEY }}" > ~/.ssh/id_rsa

    - name: Add SSH Key  
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -t rsa ${{ secrets.EC2_IP }} >> ~/.ssh/known_hosts

    - name: SSH into EC2 & Set up server Kubernetes
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_IP }} << 'EOF'
          # Set up kubectl configuration on EC2 (if not already set)
          mkdir -p ~/directory_test
          kubectl rollout restart deployment frontend-deployment -n crud
          kubectl rollout restart deployment backend-deployment -n crud
        EOF
